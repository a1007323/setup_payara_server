---
# tasks file for roles/create_payara_domain
- name: create directory
  become: true
  file:
    name: "{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    recurse: true
  loop:
    - "{{ esoaprops }}/webprops/{{ appname }}"
    - "{{ esoaloc }}/serviceconfig/{{ appname }}"
    - "{{ esoadata }}/logs/{{ appname }}"
    - "/AppTemp/{{ appname }}"
    - "/AppTemp/{{ appname }}/cache"

- name: create password file
  become: true
  copy:
    dest: "/payara/ESOA/serviceconfig/{{ appname }}/passwort.txt"
    content: |
      AS_ADMIN_MASTERPASSWORD={{ masterpw }}
      AS_ADMIN_PASSWORD={{ adminpassword }}

- name: defining port numbers
  set_fact:
    instancessl: "{{ instanceport | int +1 }}"
    adminport: "{{ instanceport | int +2 }}"
    iiopport: "{{ instanceport | int +3 }}"
    iiopsslport: "{{ instanceport | int +4 }}"
    iiopmutulauthport: "{{ instanceport | int +5 }}"
    jmxport: "{{ instanceport | int +6 }}"
    jmsport: "{{ instanceport | int +7 }}"
    osgiport: "{{ instanceport | int +8 }}"
    debugport: "{{ instanceport | int +9 }}"
    passwordfile: "{{ passworddir }}/{{ appname }}/passwort.txt"
    javapath: "/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.282.b08-2.el8_3.x86_64"

- set_fact:
    run_command: >
      {{ installationPath }}/bin/asadmin --user {{ user }} --passwordfile {{ passwordfile }}
      create-domain --domaindir {{ domaindir }} --template {{ templatefile }} --adminport
      {{ adminport }} --instanceport {{ instanceport }} --domainproperties
      http.ssl.port={{ instancessl }}:jms.port={{ jmsport }}:domain.jmxPort={{
      jmxport }}:orb.listener.port={{ iiopport }}:orb.ssl.port={{
      iiopsslport }}:orb.mutualauth.port={{ iiopmutulauthport }}:osgi.shell.telnet.port={{
      osgiport }}:java.debugger.port={{ debugport }} {{ appname }}

- name: Changing directory permission
  become: true
  file:
    path: "{{ installationPath }}/bin/asadmin"
    mode: '0755'

- name: Command to create domain
  become: true
  shell: "{{ run_command }}"

- name: change directory permission
  become: true
  file:
    path: "{{ esoaloc }}/payara-domains/{{ appname }}"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0775'
    recurse: true

- name: start domain app
  shell: nohup {{installationPath}}/bin/asadmin start-domain {{appname}} --interactive=true

- name: Create security group rules
  shell: "{{ item }}"
  loop:
    - "/usr/local/bin/aws ec2 authorize-security-group-ingress --group-id {{adminconsoleSg}} --protocol tcp --port {{adminport}} --cidr {{ip_int_jumphost}}"
    - "/usr/local/bin/aws ec2 authorize-security-group-ingress --group-id {{privateapacheSg}} --protocol tcp --port {{instancessl}} --cidr {{ip_int_apache}}"

- name: copy library jars
  include_tasks: copy_lib_jars.yml

- name: debugging test
  debug:
    msg: "out of copy lib jars"

- name: update single domain
  include_tasks: update_single_domain.yml
